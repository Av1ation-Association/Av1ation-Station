name: Release
on:
  workflow_call:
    inputs:
      dry-run:
        description: 'Compiles the app but not upload artifacts to distribution server'
        default: false
        required: false
        type: boolean

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true


defaults:
  run:
    shell: 'bash'


jobs:
  draft_release:

    permissions:
      contents: write # Allows this job to create releases

    strategy:
      fail-fast: true
      matrix:
        os: [ macos-latest, macos-13, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: 20

      - run: npm ci
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - run: npm run build

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0.3
        with:
          envkey_VAPOURSYNTH_URL: ${{ vars.VAPOURSYNTH_URL }}
          envkey_FFMS2_URL: ${{ vars.FFMS2_URL }}
          envkey_LSMASH_URL: ${{ vars.LSMASH_URL }}
          envkey_BESTSOURCE_URL: ${{ vars.BESTSOURCE_URL }}
          envkey_AV1AN_URL: ${{ vars.AV1AN_URL }}
          envkey_FFMPEG_URL: ${{ vars.FFMPEG_URL }}
          envkey_MKVTOOLNIX_URL: ${{ vars.MKVTOOLNIX_URL }}
          envkey_AOM_URL: ${{ vars.AOM_URL }}
          envkey_SVT_URL: ${{ vars.SVT_URL }}
          envkey_RAV1E_URL: ${{ vars.RAV1E_URL }}
          envkey_VPX_URL: ${{ vars.VPX_URL }}
          envkey_X264_URL: ${{ vars.X264_URL }}
          envkey_X265_URL: ${{ vars.X265_URL }}
          file_name: .env.local

      - if: ${{ matrix.os == 'windows-latest' }}
        run: npm run package-av1an

      - name: Compile artifacts ${{ inputs.dry-run && '' || 'and upload them to github release' }}
        # I use this action because it is capable of retrying multiple times if there are any issues with the distribution server
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 6
          retry_wait_seconds: 15
          retry_on: error
          shell: 'bash'
          # Due to this issue https://github.com/electron-userland/electron-builder/issues/6411 the build with npx when rebuilding native dependencies hangs forever
          # see https://github.com/cawa-93/vite-electron-builder/pull/953
          command: ./node_modules/.bin/electron-builder --config electron-builder.json --publish ${{ inputs.dry-run && 'never' || 'always' }}
        env:
          # Code Signing params
          # See https://www.electron.build/code-signing
          # CSC_LINK: ''
          # CSC_KEY_PASSWORD: ''
          # Publishing artifacts
          GH_TOKEN: ${{ secrets.github_token }} # GitHub token, automatically provided (No need to define this secret in the repo settings)
